import streamlit as st
import requests

st.title('üçÉ –ü—Ä–æ—Å—Ç–æ–π –¥–µ–∫–æ–¥–µ—Ä METAR')
st.write('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, UUEE –¥–ª—è –®–µ—Ä–µ–º–µ—Ç—å–µ–≤–æ)')

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞
icao = st.text_input('–ö–æ–¥ –ò–ö–ê–û –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞:', 'UUEE').upper()

if st.button('–ü–æ–ª—É—á–∏—Ç—å METAR'):
    if len(icao) != 4 or not icao.isalpha():
        st.error('–û—à–∏–±–∫–∞: –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 4 –±—É–∫–≤—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, UUEE)')
    else:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ METAR
            response = requests.get(
                f'https://avwx.rest/api/metar/{icao}',
                headers={'Authorization': 'AL2owhedvyAnChsCApVcZ-OpF_H0JSQ7FfC5ia5ILPU'},
                params={'options': 'translate'}
            )
            
            if response.status_code == 200:
                data = response.json()
                
                # –í—ã–≤–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                st.success(f'–¢–µ–∫—É—â–∏–π METAR –¥–ª—è {icao}:')
                st.code(data['raw'])
                
                st.subheader('–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:')
                st.write(f"**–ê—ç—Ä–æ–ø–æ—Ä—Ç:** {data.get('station', '‚Äî')}")
                st.write(f"**–í—Ä–µ–º—è:** {data.get('time', {}).get('repr', '‚Äî')}")
                
                if 'wind' in data:
                    wind = data['wind']
                    st.write(f"**–í–µ—Ç–µ—Ä:** {wind['direction']['repr']}¬∞ {wind['speed']['repr']} {wind['speed']['unit']}")
                
                if 'temperature' in data:
                    st.write(f"**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {data['temperature']['repr']}¬∞C")
                
                if 'visibility' in data:
                    st.write(f"**–í–∏–¥–∏–º–æ—Å—Ç—å:** {data['visibility']['repr']} {data['visibility']['unit']}")
                
                if 'clouds' in data:
                    st.write('**–û–±–ª–∞—á–Ω–æ—Å—Ç—å:**')
                    for cloud in data['clouds']:
                        st.write(f"- {cloud['repr']}")
            
            else:
                st.error(f'–û—à–∏–±–∫–∞: {response.status_code}. –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.')
        
        except Exception as e:
            st.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')

# –ü–æ–¥—Å–∫–∞–∑–∫–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
st.markdown('---')
st.write('–ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–æ–≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤:')
st.write('- UUEE - –®–µ—Ä–µ–º–µ—Ç—å–µ–≤–æ (–ú–æ—Å–∫–≤–∞)')
st.write('- UUDD - –î–æ–º–æ–¥–µ–¥–æ–≤–æ (–ú–æ—Å–∫–≤–∞)')
st.write('- EGLL - –•–∏—Ç—Ä–æ—É (–õ–æ–Ω–¥–æ–Ω)')
st.write('- KJFK - –ö–µ–Ω–Ω–µ–¥–∏ (–ù—å—é-–ô–æ—Ä–∫)')